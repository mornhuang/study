<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

	<!-- AOP示例 -->
	<bean id="logAround" class="com.huang.study.web.service.LogAround" />
	<bean id="logBefore" class="com.huang.study.web.service.LogBefore" />
	<bean id="logAfter" class="com.huang.study.web.service.LogAfter" />
	<bean id="logThrow" class="com.huang.study.web.service.LogThrow" />
	<bean id="timeBook" class="com.huang.study.web.service.TimeBook" />

	<!-- 手动代理 -->
	<!-- <bean id="logProxy" class="org.springframework.aop.framework.ProxyFactoryBean">
		<property name="proxyInterfaces"> <value>com.huang.web.service.ITimeBook</value>
		</property> <property name="target"> <ref bean="timeBook" /> </property>
		<property name="interceptorNames"> <list> <value>logBefore</value> <value>logAround</value>
		<value>logAfter</value> <value>logThrow</value> </list> </property> </bean> -->

	<!-- 自动代理 -->
	<bean id="logAutoProxy"
		class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator" />

	<bean id="logBeforeAdvisor"
		class="org.springframework.aop.support.RegexpMethodPointcutAdvisor">
		<property name="advice">
			<ref bean="logBefore" />
		</property>
		<property name="patterns">
			<value>.*do.*</value>
		</property>
	</bean>

	<bean id="logAfterAdvisor"
		class="org.springframework.aop.support.RegexpMethodPointcutAdvisor">
		<property name="advice">
			<ref bean="logAfter" />
		</property>
		<property name="patterns">
			<value>.*do.*</value>
		</property>
	</bean>

	<bean id="logThrowAdvisor"
		class="org.springframework.aop.support.RegexpMethodPointcutAdvisor">
		<property name="advice">
			<ref bean="logThrow" />
		</property>
		<property name="patterns">
			<value>.*</value>
		</property>
	</bean>

</beans>
