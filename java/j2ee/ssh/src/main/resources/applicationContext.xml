<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/util
        http://www.springframework.org/schema/util/spring-util.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd"
       default-lazy-init="false" default-autowire="byName">

    <!-- Annotation Support -->
    <context:component-scan base-package="com.huang">
        <!-- AspectJ Support (Must add this element) -->
        <context:include-filter type="annotation" expression="org.aspectj.lang.annotation.Aspect" />
    </context:component-scan>

    <!-- Support @Aspect Annotation -->
    <aop:aspectj-autoproxy/>

    <!-- Load i18n message -->
    <bean id="msgSource" class="org.springframework.context.support.ResourceBundleMessageSource">
        <property name="basenames">
            <list>
                <value>MessageResource</value>
            </list>
        </property>
    </bean>

    <!-- Load global configuration properties-->
    <util:properties id="gConfig" location="classpath:gconf.properties"/>

    <!-- Load place holder properties-->
    <context:property-placeholder location="classpath:beanValue.properties"/>

    <!-- Data source bean in container -->
    <bean id="dataSource" class="org.springframework.jdbc.datasource.SimpleDriverDataSource">
        <property name="driverClass" value="com.mysql.jdbc.Driver"/>
        <property name="url" value="jdbc:mysql://localhost/study"/>
        <property name="username" value="test"/>
        <property name="password" value="test"/>
    </bean>

    <!-- JPA entity manager factory (Using hibernate orm)-->
    <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <property name="jpaVendorAdapter">
            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter"/>
        </property>
        <property name="jpaProperties">
            <props>
                <prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
                <prop key="hibernate.show_sql">true</prop>
                <prop key="hibernate.format_sql">false</prop>
                <prop key="hibernate.hbm2ddl.auto">update</prop>
            </props>
        </property>
        <property name="persistenceUnitName" value="normal"/>
    </bean>

    <!-- PlatformTransactionManager implement by JPA -->
    <bean id="transManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="entityManagerFactory"/>
    </bean>

    <!-- Support @Transaction annotation -->
    <tx:annotation-driven transaction-manager="transManager" />

    <!-- Others -->
    <bean id="beanContainer" class="com.huang.j2ee.ssh.utils.BeanContainer"/>

    <bean id="jsprDao" class="com.huang.j2ee.ssh.model.IreportDaoImpl">
        <property name="sessionFactory">
            <bean class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
                <property name="configLocation" value="classpath:hibernate.cfg.xml"/>
            </bean>
        </property>
    </bean>
</beans>


